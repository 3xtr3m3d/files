#
# /etc/mpv/mpv.conf or ~/.config/mpv/mpv.conf
#
# See: https://mpv.io/manual/master/
#
# Configuration file settings and the command line options use the same underlying mechanisms. Most
# options can be put into the configuration file by dropping the preceding '--'. See the man page
# for a complete list of options. Lines starting with '#' are comments and are ignored. Profiles
# should be placed at the bottom of the configuration file to ensure that settings wanted as
# defaults are not restricted to specific profiles.
#
# Note that the commented example options usually do _not_ set the default values. Calling mpv with
# --list-options is a nice way to see the default values for most options.

### video ###
##
# Select video channel. "auto" selects the default, "no" disables video.
vid=auto

# Specify a priority list of video output drivers to be used. For interactive use, one would
# normally specify a single one to use, but in configuration files, specifying a list of fallbacks
# may make sense. The recommended output drivers are --vo=vdpau and --vo=opengl-hq. All other
# drivers are just for compatibility or special purposes.
# (see --vo=help for a list of compiled-in video output drivers)
#
#  xv (X11 only)  -- uses the XVideo extension to enable hardware-accelerated display. This is the
#                      most compatible VO on X, but may be low-quality, and has issues with OSD and
#                      subtitle display.
#  x11 (X11 only) -- shared memory video output driver without hardware acceleration that works
#                      whenever X11 is present.
#  vdpau          -- uses the VDPAU interface to display and optionally also decode video. Hardware
#                      decoding is used with --hwdec=vdpau .
#  opengl         -- opengl video output driver. It supports extended scaling methods, dithering
#                      and color management. By default, it tries to use fast and fail-safe
#                      settings. Requires at least OpenGL 2.1 . Use the alias opengl-hq to use this
#                      driver with defaults set to high quality rendering.
#  opengl-hq      -- same as opengl, but with default settings for high quality rendering.
#  sdl            -- SDL 2.0+ Render video output driver, depending on system with or without
#                      hardware acceleration. Should work on all platforms supported by SDL 2.0.
#  vaapi          -- intel VA API video output driver with support for hardware decoding. Note that
#                      there is absolutely no reason to use this, other than wanting to use hardware
#                      decoding to save power on laptops, or possibly preventing video tearing with
#                      some setups. This driver is for compatibility with crappy systems. You can
#                      use vaapi hardware decoding with --vo=opengl too.
#  null           -- produces no video output. Useful for benchmarking.
#  image          -- outputs each frame into an image file in the current directory. Each file takes
#                      the frame number padded with leading zeros as name.
#  caca           -- color ASCII art video output driver that works on a text console. (This driver
#                      is a joke.)
#  wayland        -- wayland shared memory video output as fallback for opengl. This driver is for
#                      compatibility with systems that don't provide working OpenGL drivers.
vo=opengl

# Specify the hardware video decoding API that should be used if possible. Whether hardware
# decoding is actually done depends on the video codec. If hardware decoding is not possible, mpv
# will fall back on software decoding. API can be one of the following:
#
#  no                always use software decoding (default)
#  auto              see below
#  vdpau             requires --vo=vdpau or --vo=opengl (Linux only)
#  vaapi             requires --vo=opengl or --vo=vaapi (Linux only)
#  vaapi-copy        copies video back into system RAM (Linux with Intel GPUs only)
#  videotoolbox      requires --vo=opengl (OS X 10.8 and up only)
#  dxva2-copy        copies video back to system RAM (Windows only)
#  rpi               requires --vo=rpi (Raspberry Pi only - default if available)
#
# "auto" tries to automatically enable hardware decoding using the first available method. This
# still depends what VO you are using. For example, if you are not using --vo=vdpau or --vo=opengl,
# vdpau decoding will never be enabled. Also note that if the first found method doesn't actually
# work, it will always fall back to software decoding, instead of trying the next method (might
# matter on some Linux systems).
#
# The vaapi mode, if used with --vo=opengl, requires Mesa 11 and most likely works with Intel GPUs
# only. It also requires the opengl EGL backend (automatically used if available). You can also try
# the old GLX backend by forcing it with --vo=opengl:backend=x11, but the vaapi/GLX interop is said
# to be slower than vaapi-copy.
#
# The vaapi-copy mode allows you to use vaapi with any VO. Because this copies the decoded video
# back to system RAM, it's likely less efficient than the vaapi mode. When using this switch,
# hardware decoding is still only done for some codecs. See --hwdec-codecs to enable hardware
# decoding for more codecs.
hwdec=no

# Override video aspect ratio, in case aspect information is incorrect or missing in the file being
# played. See also --no-video-aspect. Two values have special meaning:
#   0:  disable aspect ratio handling, pretend the video has square pixels
#  -1:  use the video stream or container aspect (default)
#
# But note that handling of these special values might change in the future. Examples:
#
#  --video-aspect=4:3 or --video-aspect=1.3333
#  --video-aspect=16:9 or --video-aspect=1.7777
#
#video-aspect=16:9
#
# Ignore aspect ratio information from video file and assume the video has square pixels. See
# also --video-aspect.
#no-video-aspect
#
# This sets the default video aspect determination method (if the aspect is _not_ overridden by the
# user with --video-aspect or others).
#
#  hybrid         -- Prefer the container aspect ratio. If the bitstream aspect switches mid-stream,
#                      switch to preferring the bitstream aspect. This is the default behavior in
#                      mpv and mplayer2.
#  container      -- Strictly prefer the container aspect ratio. This is apparently the default
#                      behavior with VLC, at least with Matroska.
#  bitstream      -- Strictly prefer the bitstream aspect ratio, unless the bitstream aspect ratio
#                      is not set. This is apparently the default behavior with XBMC/kodi, at least
#                      with Matroska.
#
# Normally you should not set this. Try the container and bitstream choices if you encounter video
# that has the wrong aspect ratio in mpv, but seems to be correct in other players.
video-aspect-method=container

# Enable or disable interlacing (default: auto, which usually means no). Interlaced video shows
# ugly comb-like artifacts, which are visible on fast movement. Enabling this typically inserts the
# yadif video filter in order to deinterlace the video, or lets the video output apply
# deinterlacing if supported. This behaves exactly like the deinterlace input property (usually
# mapped to d). "auto" is a technicality. Strictly speaking, the default for this option is
# deinterlacing disabled, but the auto case is needed if yadif was added to the filter chain
# manually with --vf. Then the core shouldn't disable deinterlacing just because the
# --deinterlace was not set.
deinterlace=yes

# Start in screen mode by default.
fullscreen=no

# Adjust the initial window position or size. "W" and "H" set the window size in pixels. "x" and "y"
# set the window position, measured in pixels from the top-left corner of the screen to the top-left
# corner of the image being displayed. If a percentage sign (%) is given after the argument, it
# turns the value into a percentage of the screen size in that direction. Positions are specified
# similar to the standard X11 --geometry option format, in which e.g. +10-50 means "place 10 pixels
# from the left border and 50 pixels from the lower border" and "--20+-10" means "place 20 pixels
# beyond the right and 10 pixels beyond the top border".
geometry=50%:50%

# Do not terminate when playing or seeking beyond the end of the file, and there is not next file
# to be played (and --loop is not used). Instead, pause the player. When trying to seek beyond end
# of the file, the player will attempt to seek to the last frame. The following arguments can be
# given:
#
#      no    If the current file ends, go to the next file or terminate. (Default.)
#     yes    Don't terminate if the current file is the last playlist entry. Equivalent to
#              --keep-open without arguments.
#  always   Like yes, but also applies to files before the last playlist entry. This means playback
#             will never automatically advance to the next file.
#
keep-open=yes


# Set the initial window size to a maximum size specified by WxH, without changing the window's
# aspect ratio. The size is measured in pixels, or if a number is followed by a percentage sign (%),
# in percents of the screen size. This option never changes the aspect ratio of the window. If the
# aspect ratio mismatches, the window's size is reduced until it fits into the specified size.
# Window position is not taken into account, nor is it modified by this option (the window manager
# still may place the window differently depending on size). Use --geometry to change the window
# position. Its effects are applied after this option. See --geometry for details how this is
# handled with multi-monitor setups. Use --autofit-larger instead if you just want to limit the
# maximum size of the window, rather than always forcing a window size. Use --geometry if you want
# to force both window width and height to a specific size. Generally only supported by GUI VOs.
# Ignored for encoding. Examples:
#
#  70%       Make the window width 70% of the screen size, keeping aspect ratio.
#  1000      Set the window width to 1000 pixels, keeping aspect ratio.
#  70%x60%   Make the window as large as possible, without being wider than 70% of the screen width,
#              or higher than 60% of the screen height.
#
autofit=40%x40%
#
# This option behaves exactly like --autofit, except the window size is only changed if the window
# would be larger than the specified size. For example 90%x80% means that if the video is larger
# than 90% of the screen width or 80% of the screen height, make the window smaller until either
# its width is 90% of the screen, or its height is 80% of the screen.
#autofit-larger=50%x50%
#
# This option behaves exactly like --autofit, except that it sets the minimum size of the window
# (just as --autofit-larger sets the maximum). For exmaple 500x500 makes the window at least 500
# pixels wide and 500 pixels high (depending on the video aspect ratio, the width or height will be
# larger than 500 in order to keep the aspect ratio the same).
#autofit-smaller=

# Turns off the screensaver (or screen blanker and similar mechanisms) at startup and turns it on
# again on exit (default: yes). The screensaver is always re-enabled when the player is paused. 
# This is not supported on all video outputs or platforms. Sometimes it is implemented, but does
# not work (happens often on GNOME). You might be able to to work this around using --heartbeat-cmd
# instead.
#no-stop-screensaver
stop-screensaver

# Whether to load the on-screen-controller (OSC).
osc
#no-osc

# Makes the player window stay on top of other windows.
ontop=no

# Play video with window border and decorations. Since this is on by default, use --no-border to
# disable the standard window decorations.
border
#no-border

# Number of threads to use for decoding. Whether threading is actually supported depends on codec
# (default: 0). "0" means autodetect number of cores on the machine and use that, up to the
# maximum of 16. You can set more than "16" threads manually.
vd-lavc-threads=2

### audio ###
##
# Specify default audio driver. See --ao=help for a list of compiled-in audio output drivers.
# Available audio outputs:
#
#  pulse      : PulseAudio audio output
#  alsa       : ALSA audio output
#  oss        : OSS/ioctl audio output
#  jack       : JACK audio output
#  openal     : OpenAL audio output
#  null       : Null audio output
#  pcm        : RAW PCM/WAVE file writer audio output
#
# The driver --ao=alsa is preferred. --ao=pulse is preferred on systems where PulseAudio is used.
# If the list has a trailing ',' , mpv will fall back on drivers not contained in the list.
ao=pulse,alsa

# Set the startup volume. 0 means silence, 100 means no volume reduction or amplification. A value
# of -1 (the default) will not change the volume. See also --softvol. This was changed after the
# mpv 0.9 release. Before that, 100 actually meant maximum volume. At the same time, the volume
# scale was made cubic, so the old values won't match up with the new ones anyway.
volume=120

# Control whether to use the volume controls of the audio output driver or the internal mpv volume
# filter:
#
#    no: prefer audio driver controls, use the volume filter only if absolutely needed
#   yes: always use the volume filter
#  auto: prefer the volume filter if the audio driver uses the system mixer (default)
#
# The intention of auto is to avoid changing system mixer settings from within mpv with default
# settings. mpv is a video player, not a mixer panel. On the other hand, mixer controls are enabled
# for sound servers like PulseAudio, which provide per-application volume.
softvol=yes
#
# Set the maximum amplification level in percent (default: 130). A value of 130 will allow you to
# adjust the volume up to about double the normal level.
softvol-max=200.0

# Scale audio tempo by playback speed without altering pitch. (By default does nothing if playback
# speed is not changed. May introduce artifacts.)
#af=scaletempo

# Output 5.1 audio natively, and upmix/downmix audio with a different format.
#audio-channels=5.1
# Disable any automatic remix, _if_ the audio output accepts the audio format of the currently
# played file.
#audio-channels=empty

# Select audio track -- "auto" selects the default, "no" disables audio. mpv normally prints
# available audio tracks on the terminal when starting playback of a file.
aid=auto
# Specify a priority list of audio languages to use. Different container formats employ different
# language codes. DVDs use ISO 639-1 two-letter language codes, Matroska, MPEG-TS and NUT use ISO
# 639-2 three-letter language codes, while OGM uses a free-form identifier.
alang=eng,pol

### cache ####
##
# Set the size of the cache in kilobytes, disable it with "no", or automatically enable it if
# needed with "auto" (default: auto). With "auto", the cache will usually be enabled for network
# streams, using the size set by --cache-default . With "yes", the cache will always be enabled
# with the size set by --cache-default (unless the stream can not be cached, or --cache-default
# disables caching). May be useful when playing files from slow media, but can also have negative
# effects, especially with file formats that require a lot of seeking, such as MP4. Note that half
# the cache size will be used to allow fast seeking back. This is also the reason why a full cache
# is usually not reported as 100% full. The cache fill display does not include the part of the
# cache reserved for seeking back. The actual maximum percentage will usually be the ratio between
# readahead and backbuffer sizes.
#no-cache
#cache=8192

# Set the size of the cache in kilobytes (default: 75000 KB). Using "no" will not automatically
# enable the cache e.g. when playing from a network stream. Note that using --cache will always
# override this option.
cache-default=8192

# Playback will start when the cache has been filled up with this many kilobytes of data.
cache-initial=0

# If a seek is to be made to a position within <kBytes> of the cache size from the current position,
# mpv will wait for the cache to be filled to this position rather than performing a stream seek
# (default: 500). This matters for small forward seeks. With slow streams (especially HTTP streams)
# there is a tradeoff between skipping the data between current position and seek destination, or
# performing an actual seek. Depending on the situation, either of these might be slower than the
# other method. This option allows control over this.
cache-seek-min=1024

# Size of the cache back buffer (default: 75000 KB). This will add to the total cache size, and
# reserved the amount for seeking back. The reserved amount will not be used for readahead, and
# instead preserves already read data to enable fast seeking back.
#cache-backbuffer=8192
    
# Create a cache file on the filesystem. There are two ways of using this:
# 1. Passing a path (a filename). The file will always be overwritten. When the general cache is
#      enabled, this file cache will be used to store whatever is read from the source stream. This
#      will always overwrite the cache file, and you can't use an existing cache file to resume
#      playback of a stream. (Technically, mpv wouldn't even know which blocks in the file are
#      valid and which not). The resulting file will not necessarily contain all data of the source
#      stream. For example, if you seek, the parts that were skipped over are never read and
#      consequently are not written to the cache. The skipped over parts are filled with zeros.
#      This means that the cache file doesn't necessarily correspond to a full download of the
#      source stream. Both of these issues could be improved if there is any user interest. Causes
#      random corruption when used with ordered chapters or with --audio-file.
#
# 2. Passing the string TMP. This will not be interpreted as filename. Instead, an invisible
#      temporary file is created. It depends on your C library where this file is created
#      (usually /tmp/), and whether filename is visible (the tmpfile() function is used). On some
#      systems, automatic deletion of the cache file might not be guaranteed. If you want to use a
#      file cache, this mode is recommended, because it doesn't break ordered chapters or
#      --audio-file. These modes open multiple cache streams, and using the same file for them
#      obviously clashes.
#cache-file=TMP

# Maximum size of the file created with --cache-file. For read accesses above this size, the cache
# is simply not used. Keep in mind that some use-cases, like playing ordered chapters with cache
# enabled, will actually create multiple cache files, each of which will use up to this much disk
# space. (Default: 1048576, 1 GB.)
#cache-file-size=65536
    
# How many seconds of audio/video to prefetch if the cache is active. This overrides the 
# --demuxer-readahead-secs option if and only if the cache is enabled and the value is larger.
# (Default: 10).
cache-secs=15

# Whether the player should automatically pause when the cache runs low, and unpause once more data
# is available ("buffering").
cache-pause=no

### subtitles ###
##
# Display the subtitle stream. "auto" selects the default, "no" disables subtitles.
sid=auto
# Specify a priority list of subtitle languages to use. Different container formats employ different
# language codes. DVDs use ISO 639-1 two letter language codes, Matroska uses ISO 639-2 three letter
# language codes while OGM uses a free-form identifier. See also --sid.
slang=eng,pol

# Change subtitle encoding. For Arabic subtitles use 'cp1256'.  If the file seems to be valid UTF-8,
# prefer UTF-8.
#sub-codepage=utf8:cp1256

### screenshots ###
##
# Screenshots of the currently played file can be taken using the 'screenshot' input mode command,
# which is by default bound to the "s" key. Files named shotNNNN.jpg will be saved in the working
# directory, using the first available number -- no files will be overwritten. A screenshot will
# usually contain the unscaled video contents at the end of the video filter chain and subtitles.
# By default, "S" takes screenshots without subtitles, while "s" includes subtitles.
#
# Set the image file type used for saving screenshots. Available choices:
#     png: PNG
#     ppm: PPM
#     pgm: PGM
#  pgmyuv: PGM with YV12 pixel format
#     tga: TARGA
#     jpg: JPEG (default)
#    jpeg: JPEG (same as jpg, but with .jpeg file ending)
screenshot-format=png
#
# Tag screenshots with the appropriate colorspace. Note that not all formats are supported.
#screenshot-tag-colorspace=no
#
# If possible, write screenshots with a bit depth similar to the source video (default: yes). This
# is interesting in particular for PNG, as this sometimes triggers writing 16 bit PNGs with huge
# file sizes. 
screenshot-high-bit-depth=yes
#
# Specify the filename template used to save screenshots. The template specifies the filename
# without file extension, and can contain format specifiers, which will be substituted when taking
# a screenshot. By default the template is mpv-shot%n, which results in filenames like
# mpv-shot0012.png for example. The template can start with a relative or absolute path, in order
# to specify a directory location where screenshots should be saved. If the final screenshot
# filename points to an already existing file, the file will not be overwritten. The screenshot
# will either not be saved, or if the template contains %n, saved using different, newly generated
# filename. Allowed format specifiers:
#
#  %[#][0X]n -- A sequence number, padded with zeros to length X (default: 04). E.g. passing the
#                 format %04n will yield 0012 on the 12th screenshot. The number is incremented
#                 every time a screenshot is taken or if the file already exists. The length X must
#                 be in the range 0-9. With the optional # sign, mpv will use the lowest available
#                 number. For example, if you take three screenshots--0001, 0002, 0003--and delete
#                 the first two, the next two screenshots will not be 0004 and 0005, but 0001 and
#                 0002 again.
#  %f        -- Filename of the currently played video.
#  %F        -- Same as %f, but strip the file extension, including the dot.
#  %x        -- Directory path of the currently played video. If the video is not on the filesystem
#                 (but e.g. http://), this expand to an empty string.
#  %X        -- Same as %x, but if the video file is not on the filesystem, return the fallback
#                 string inside the {...}.
#  %p        -- Current playback time, in the same format as used in the OSD. The result is a
#                 string of the form "HH:MM:SS". For example, if the video is at the time position
#                 5 minutes and 34 seconds, %p will be replaced with "00:05:34".
#  %P        -- Similar to %p, but extended with the playback time in milliseconds. It is formatted
#                 as "HH:MM:SS.mmm", with "mmm" being the millisecond part of the playback time. 
#                 This is a simple way for getting unique per-frame timestamps. (Frame numbers
#                 would be more intuitive, but are not easily implementable because container
#                 formats usually use time stamps for identifying frames.)
#  %wX       -- Specify the current playback time using the format string X. %p is like %wH:%wM:%wS,
#                 and %P is like %wH:%wM:%wS.%wT.
#
#       Valid format specifiers:
#       %wH  -- hour (padded with 0 to two digits)
#       %wh  -- hour (not padded)
#       %wM  -- minutes (00-59)
#       %wm  -- total minutes (includes hours, unlike %wM)
#       %wS  -- seconds (00-59)
#       %ws  -- total seconds (includes hours and minutes)
#       %wf  -- like %ws, but as float
#       %wT  -- milliseconds (000-999)
#       %tX  -- Specify the current local date/time using the format X. This format specifier uses
#                 the UNIX strftime() function internally, and inserts the result of passing "%X" 
#                 to strftime. For example, %tm will insert the number of the current month as
#                 number. You have to use multiple %tX specifiers to build a full date/time string.
#       %{prop[:fallback text]} -- Insert the value of the slave property 'prop'. E.g. %{filename}
#                                    is the same as %f. If the property does not exist or is not
#                                    available, an error text is inserted, unless a fallback is
#                                    specified.
#       %%  -- Replaced with the % character itself. 
screenshot-template=mpv-shot%04n
#
# Store screenshots in this directory. This path is joined with the filename generated by
# --screenshot-template. If the template filename is already absolute, the directory is ignored. If 
# the directory does not exist, it is created on the first screenshot. If it is not a directory, an
# error is generated when trying to write a screenshot. This option is not set by default, and thus
# will write screenshots to the directory from which mpv was started. In pseudo-gui mode this is
# set to the desktop.
#screenshot-directory=
#
# Set the JPEG quality level. Higher means better quality. The default is 90.
screenshot-jpeg-quality=95
#
# Write JPEG files with the same chroma subsampling as the video (default: yes). If disabled, the
# libjpeg default is used.
#screenshot-jpeg-source-chroma=
#
# Set the PNG compression level. Higher means better compression. This will affect the file size of
# the written screenshot file and the time it takes to write a screenshot. Too high compression
# might occupy enough CPU time to interrupt playback. The default is 7.
screenshot-png-compression=5
#
# Set the filter applied prior to PNG compression. 0 is none, 1 is "sub", 2 is "up", 3 is "average",
# 4 is "Paeth", and 5 is "mixed". This affects the level of compression that can be achieved. For
# most images, "mixed" achieves the best compression ratio, hence it is the default.
#screenshot-png-filter=

### log ###
##
# Make console output less verbose; in particular, prevents the status line from being displayed.
# Particularly useful on slow terminals or broken ones which do not properly handle carriage return
# (i.e. \r).
#quiet
#really-quiet

# Disable any use of the terminal and stdin/stdout/stderr. This completely silences any message
# output. Unlike --really-quiet, this disables input and terminal initialization as well.
terminal
#no-terminal

# Control verbosity directly for each module. The all module changes the verbosity of all the
# modules not explicitly specified on the command line. Run mpv with --msg-level=all=trace to see
# all messages mpv outputs. You can use the module names printed in the output (prefixed to each
# line in [...]) to limit the output to interesting modules. Available levels:
#
#  no:      complete silence
#  fatal:   fatal messages only
#  error:   error messages
#  warn:    warning messages
#  info:    informational messages
#  status:  status messages (default)
#  v:       verbose messages
#  debug:   debug messages
#  trace:   very noisy debug messages
#
#msg-level=

# Disable/Enable colorful console output on terminals.
#no-msg-color
msg-color

# Prepend timing information to each console message.
#msg-time

### others ####
##
# Pretend to be a web browser. Might fix playback with some streaming sites,
# but also will break with shoutcast streams.
#user-agent="Mozilla/5.0"

# You can also include other configuration files.
include=~/.config/mpv/encoding-profiles.conf
include=~/.config/mpv/input.conf

### profiles ###
##
# The options declared as part of profiles override global default settings, but only take effect
# when the profile is active. The following profile can be enabled on the command line
# with: --profile=vdpau

#[vdpau]
# The profile forces the vdpau VO.
#vo=vdpau
# Use hardware decoding (this might break playback of some h264 files)
#hwdec=vdpau
# Most video filters do not work with hardware decoding.
#vf-clr=yes

[mpsyt]
profile-desc="profile for mps-youtube"
keep-open=no
fs=yes
