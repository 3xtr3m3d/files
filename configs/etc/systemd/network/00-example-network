# see:
# udevadm test /sys/class/net/eth1 2>/dev/null |grep ID_NET_NAME_
# udevadm info /sys/class/net/enp2s0
#
#[Match]
# The hardware address.
#MACAddress=

# A whitespace-separated list of shell-style globs matching the persistent path, as exposed by the
# udev property "ID_PATH".
#Path=

# A whitespace-separated list of shell-style globs matching the driver currently bound to the
# device, as exposed by the udev property "DRIVER" of its parent device, or if that is not set the
# driver as exposed by "ethtool -i" of the device itself.
#Driver=

# A whitespace-separated list of shell-style globs matching the device type, as exposed by the udev
# property "DEVTYPE".
#Type=

# A whitespace-separated list of shell-style globs matching the device name, as exposed by the udev
# property "INTERFACE".
#Name=

#[Link]
# The hardware address.
#MACAddress=

# The maximum transmission unit in bytes to set for the device. The usual suffixes K, M, G, are
# supported and are understood to the base of 1024.
#MTUBytes=

#[Network]
#Description=Wired interface

# Enables DHCPv4 and/or DHCPv6 client support. Accepts "yes", "no", "ipv4", or "ipv6". Note that
# DHCPv6 will by default be triggered by Router Advertisment, if that is enabled, regardless of
# this parameter. By enabling DHCPv6 support explicitly, the DHCPv6 client will be started
# regardless of the presence of routers on the link, or what flags the routers pass. See
# "IPv6AcceptRouterAdvertisements=". Furthermore, note that by default the domain name specified
# through DHCP is not used for name resolution. See option UseDomains= below.
#DHCP=

# A boolean. Enables DHCPv4 server support. Defaults to "no". Further settings for the DHCP server
# may be set in the "[DHCPServer]" section described below.
#DHCPServer=

# Enables link-local address autoconfiguration. Accepts "yes", "no", "ipv4", or "ipv6". Defaults
# to "ipv6".
#LinkLocalAddressing=

# When true, sets up the route needed for non-IPv4LL hosts to communicate with IPv4LL-only hosts.
# Defaults to false.
#IPv4LLRoute=

# An IPv6 address with the top 64 bits unset. When set, indicates the 64-bit interface part of
# SLAAC IPv6 addresses for this link. By default, it is autogenerated.
#IPv6Token=

# A boolean or "resolve". When true, enables Link-Local Multicast Name Resolution on the link. When
# set to "resolve", only resolution is enabled, but not announcement. Defaults to true.
#LLMNR=

# A boolean. When true, enables LLDP link receive support.
#LLDP=

# A port or a list of ports. When set, controls the behavior of the current interface. When all
# ports in the list are in an operational down state, the current interface is brought down. When
# at least one port has carrier, the current interface is brought up.
#BindCarrier=

# A static IPv4 or IPv6 address and its prefix length, separated by a "/" character. Specify this
# key more than once to configure several addresses. The format of the address must be as described
# in inet_pton(3). This is a short-hand for an [Address] section only containing an Address key
# (see below). This option may be specified more than once.
#
# If the specified address is 0.0.0.0 (for IPv4) or [::] (for IPv6), a new address range of the
# requested size is automatically allocated from a system-wide pool of unused ranges. The allocated
# range is checked against all current network interfaces and all known network configuration files
# to avoid address range conflicts. The default system-wide pool consists of 192.168.0.0/16,
# 172.16.0.0/12 and 10.0.0.0/8 for IPv4, and fc00::/7 for IPv6. This functionality is useful to
# manage a large number of dynamically created network interfaces with the same network
# configuration and automatic address range assignment.
#Address=

# The gateway address, which must be in the format described in inet_pton(3). This is a short-hand
# for a [Route] section only containing a Gateway key. This option may be specified more than once.
#Gateway=

# A DNS server address, which must be in the format described in inet_pton(3). This option may be
# specified more than once.
#DNS=

# The domains used for DNS resolution over this link.
#Domains=

# An NTP server address. This option may be specified more than once.
#NTP=

# Configures IP packet forwarding for the system. If enabled, incoming packets on any network
# interface will be forwarded to any other interfaces according to the routing table. Takes either
# a boolean argument, or the values "ipv4" or "ipv6", which only enable IP packet forwarding for
# the specified address family. This controls the net.ipv4.ip_forward and
# net.ipv6.conf.all.forwarding sysctl options of the network interface (see ip-sysctl.txt[1] for
# details about sysctl options). Defaults to "no".
#
# Note: this setting controls a global kernel option, and does so one way only: if a network that
# has this setting enabled is set up the global setting is turned on. However, it is never turned
# off again, even after all networks with this setting enabled are shut down again.
#
# To allow IP packet forwarding only between specific network interfaces use a firewall.
#IPForward=

# Configures IP masquerading for the network interface. If enabled, packets forwarded from the
# network interface will be appear as coming from the local host. Takes a boolean argument. Implies
# IPForward=ipv4. Defaults to "no".
#IPMasquerade=

# Configures use of stateless temporary addresses that change over time (see RFC 4941[2], Privacy
# Extensions for Stateless Address Autoconfiguration in IPv6). Takes a boolean or the special
# values "prefer-public" and "kernel". When true, enables the privacy extensions and prefers
# temporary addresses over public addresses. When "prefer-public", enables the privacy extensions,
# but prefers public addresses over temporary addresses. When false, the privacy extensions remain
# disabled. When "kernel", the kernel's default setting will be left in place. Defaults to "no".
#IPv6PrivacyExtensions=

# Force the setting of the accept_ra (router advertisements) setting for the interface. When unset,
# the kernel default is used, and router advertisements are accepted only when local forwarding is
# disabled for that interface. When router advertisements are accepted, they will trigger the start
# of the DHCPv6 client if the relevant flags are passed, or if no routers are found on the link.
# Takes a boolean. If true, router advertisements are accepted, when false, router advertisements
# are ignored, independently of the local forwarding state. See ip-sysctl.txt[1] in the kernel
# documentation, but note that systemd's setting of 1 corresponds to kernel's setting of 2.
#IPv6AcceptRouterAdvertisements=

# Configures the amount of IPv6 Duplicate Address Detection (DAD) probes to send. Defaults to unset.
#IPv6DuplicateAddressDetection=

# Configures IPv6 Hop Limit. For each router that forwards the packet, the hop limit is decremented
# by 1. When the hop limit field reaches zero, the packet is discarded. Defaults to unset.
#IPv6HopLimit=

# The name of the bridge to add the link to.
#Bridge=

# The name of the bond to add the link to.
#Bond=

# The name of a VLAN to create on the link. This option may be specified more than once.
#VLAN=

# The name of a MACVLAN to create on the link. This option may be specified more than once.
#MACVLAN=

# The name of a VXLAN to create on the link. This option may be specified more than once.
#VXLAN=

# The name of a Tunnel to create on the link. This option may be specified more than once.
#Tunnel=

#[DHCP]
# When true (the default), the DNS servers received from the DHCP server will be used and take
# precedence over any statically configured ones. This corresponds to the nameserver option in
# resolv.conf(5).
#UseDNS=

# When true (the default), the NTP servers received from the DHCP server will be used by
# systemd-timesyncd and take precedence over any statically configured ones.
#UseNTP=

# When true, the interface maximum transmission unit from the DHCP server will be used on the
# current link. Defaults to false.
#UseMTU=

# When true (the default), the machine's hostname will be sent to the DHCP server.
#SendHostname=

# When true (the default), the hostname received from the DHCP server will be set as the transient
# hostname of the system
#UseHostname=

# When true (not the default), the domain name received from the DHCP server will be used for DNS
# resolution over this link. When a name cannot be resolved as specified, the domain name will be
# used a suffix and name resolution of that will be attempted. This corresponds to the domain
# option in resolv.conf(5) and should not be enabled on untrusted networks.
#UseDomains=

# When true (the default), the static routes will be requested from the DHCP server and added to
# the routing table with a metric of 1024.
#UseRoutes=

# When true, the timezone received from the DHCP server will be set as as timezone of the local
# system. Defaults to "no".
#UseTimezone=

# When true, the connection will never be torn down even if the DHCP lease expires. This is
# contrary to the DHCP specification, but may be the best choice if, say, the root filesystem
# relies on this connection. Defaults to false.
#CriticalConnection=

# DHCP client identifier to use. Either "mac" to use the MAC address of the link or "duid" (the
# default) to use a RFC4361-compliant Client ID.
#ClientIdentifier=

# The vendor class identifier used to identify vendor type and configuration.
#VendorClassIdentifier=

# Request the server to use broadcast messages before the IP address has been configured. This is
# necessary for devices that cannot receive RAW packets, or that cannot receive packets at all
# before an IP address has been configured. On the other hand, this must not be enabled on networks
# where broadcasts are filtered out.
#RequestBroadcast=

# Set the routing metric for routes specified by the DHCP server.
#RouteMetric=
