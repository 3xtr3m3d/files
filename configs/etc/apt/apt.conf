#
# /etc/apt/apt.conf or ~/.aptitude/config
#
# http://aptitude.alioth.debian.org/doc/en/
#

# Location to fetch packages from.
Dir::Etc::SourceList "/etc/apt/sources.list";

# File fragments for locations to fetch packages from.
Dir::Etc::SourceParts "/etc/apt/sources.list.d/";

# APT configuration file.
Dir::Etc::Main "/etc/apt/apt.conf";

# APT configuration file fragments.
Dir::Etc::Parts "/etc/apt/apt.conf.d/";

# Version preferences file. This is where you would specify "pinning", i.e. a preference to get
# certain packages from a separate source or from a different version of a distribution.
Dir::Etc::Preferences "/etc/apt/preferences";

# File fragments for the version preferences.
Dir::Etc::PreferencesParts "/etc/apt/preferences.d/";

# Storage area for:
#  retrieved package files,
#  package files in transit,
#  state information for each package resource specified in sources.list(5)
Dir::Cache "/media/Kabi/backup_packages/apt";
Dir::Cache::Archives "/media/Kabi/backup_packages/apt/archives/";
Dir::State::Lists "/media/Kabi/backup_packages/apt/lists/";

# Default release to install packages from if more than one version is available. Contains release
# name, codename or release version. Examples: 'stable', 'testing', 'unstable', 'jessie', 'stretch',
# '4.0', '5.0*'.
#APT::Default-Release "testing";

# If this option is true, aptitude will automatically attempt to fulfill the dependencies of a
# package when you mark a package to be installed or upgraded.
Aptitude::Auto-Install "true";

# If this option is true and Aptitude::Auto-Install is true, then whenever you mark a package for
# installation, aptitude will also mark the packages it recommends for installation. Furthermore,
# if this option is true, aptitude will not consider packages to be unused (and thus will not
# automatically remove them) as long as any installed package recommends them.
APT::Install-Recommends "false";

# If this option is true and Aptitude::Auto-Install is true, then whenever you mark a package for
# installation, aptitude will also mark the packages it suggests for installation. Furthermore,
# if this option is true, aptitude will not consider packages to be unused (and thus will not
# automatically remove them) as long as any installed package suggests them.
APT::Install-Suggests "false";

# If this option is true, then aptitude will not consider packages to be unused (and thus will not
# automatically remove them) as long as any installed package recommends them.
APT::AutoRemove::RecommendsImportant "false";

# If this option is true, then aptitude will not consider packages to be unused (and thus will not
# automatically remove them) as long as any installed package suggests them.
APT::AutoRemove::SuggestsImportant "false";

# Ignore if packages can't be authenticated and don't prompt about it.
APT::Get::AllowUnauthenticated "false";
Aptitude::CmdLine::Ignore-Trust-Violations "false";

# Show full versions for upgraded and installed packages.
APT::Get::Show-Versions "false";

# Use purge instead of remove for anything that would be removed. An asterisk ("*") will be
# displayed next to packages which are scheduled to be purged.
APT::Get::Purge "false";

# If the command is either install or remove, then this option acts like running the autoremove
# command, removing unused dependency packages.
APT::Get::AutomaticRemove "true";

# This option is on by default; use --no-list-cleanup to turn it off. When it is on, apt-get will
# automatically manage the contents of /var/lib/apt/lists to ensure that obsolete files are erased.
APT::Get::List-Cleanup "true";

# After packages are successfully installed by apt(8), the corresponding .deb package files will be
# removed from the /var/cache/apt/archives cache directory when this option was set to "false".
APT::Keep-Downloaded-Packages "true";

# If this option is true, aptitude will clean up obsolete files (cache) every time you update the
# package list.
Aptitude::Autoclean-After-Update "false";

# If this option is enabled, the results of command-line searches (performed via aptitude search)
# will not be formatted into fixed-width columns or truncated to the screen width.
Aptitude::CmdLine::Disable-Columns "true";

# Set to auto, none, package, or source-package to control whether and how the output of
# "aptitude versions" is grouped.
Aptitude::CmdLine::Versions-Group-By "source-package";

# This is a format string, which is used to display the results of "aptitude search" command.
Aptitude::CmdLine::Package-Display-Format "%c%a%M %p# => %d# [%t]";

# This controls how verbose the command-line mode of aptitude is. Every occurrence of the -v
# command-line option adds 1 to this value.
Aptitude::CmdLine::Verbose "0";

# Show user friendly progress information in the terminal window when packages are installed,
# upgraded or removed.
Dpkg::Progress "true";
Dpkg::Progress-Fancy "true";

# Useful for systems with a separate /usr/ partition that is mounted in read only mode.
#DPkg
#{
#Pre-Invoke { "mount /usr -o remount,rw" };
#Post-Invoke { "mount /usr -o remount,ro" };
#};

# Try to download deltas called PDiffs for indexes (like Packages files) instead of downloading
# whole ones.
Acquire::PDiffs "true";

# The used bandwidth can be limited with this option, which accepts integer values in kilobytes
# per second. The default value is 0 which deactivates the limit and tries to use all available
# bandwidth. Note that this option implicitly disables downloading from multiple servers at the
# same time.
Acquire::http::Dl-Limit "0";
Acquire::https::Dl-Limit "0";
Acquire::ftp::Dl-Limit "0";

# These options set the timeout timer and this value applies to the connection as well as the
# data timeout.
Acquire::http::Timeout "2";
Acquire::https::Timeout "2";
Acquire::ftp::Timeout "2";

# When downloading, force to use only the IPv4 or IPv6 protocol.
Acquire::ForceIPv4 "true";
#Acquire::ForceIPv6 "true";
